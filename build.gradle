plugins {
    id 'java'
    id 'checkstyle'
    id "io.spring.dependency-management" version '1.0.11.RELEASE'
}

repositories {
    mavenCentral()
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

configurations {
    checkstyleConfig
}

dependencyManagement {
    imports {
        mavenBom 'org.junit:junit-bom:5.4.0'
        mavenBom 'io.github.openfeign:feign-bom:11.8'
    }
    dependencies {
        dependencySet(group: 'org.projectlombok', version: "1.18.24") {
            entry('lombok')
        }
        dependencySet(group: 'org.slf4j', version: "1.7.36") {
            entry('slf4j-api')
            entry('slf4j-simple')
        }
        dependencySet(group: 'ch.qos.logback', version: "1.2.3") {
            entry('logback-classic')
            entry('logback-core')
        }
        dependencySet(group: 'org.seleniumhq.selenium', version: "4.1.3") {
            entry('selenium-api')
            entry('selenium-java')
            entry('selenium-support')
            entry('selenium-remote-driver')
            entry('selenium-chrome-driver')
        }
    }
}

def checkstyleVersion = '8.29'
dependencies {
    compileOnly "org.projectlombok:lombok"
    testCompileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.projectlombok:lombok"

    checkstyleConfig("com.puppycrawl.tools:checkstyle:${checkstyleVersion}") { transitive = false }

    implementation([
            'com.codeborne:selenide:6.4.0',
            'org.selenide:selenide-selenoid:2.2.1',

            'org.slf4j:slf4j-api',
            'ch.qos.logback:logback-classic',
            'ch.qos.logback:logback-core',

            'io.github.openfeign:feign-core',
            'io.github.openfeign.form:feign-form:3.8.0',
            'io.github.openfeign:feign-jackson',
            'io.github.openfeign:feign-slf4j',

            'com.codepine.api:testrail-api-java-client:2.0.2',

            'org.junit.jupiter:junit-jupiter-api',

            'org.awaitility:awaitility:3.0.0',
            'org.reflections:reflections:0.10.2'

    ])
    testImplementation([
            'org.junit.jupiter:junit-jupiter-engine',
            'org.junit.jupiter:junit-jupiter-params'
    ])
}

testClasses {
    dependsOn checkstyleMain
}

test {
    dependsOn checkstyleTest
    useJUnitPlatform()
}

checkstyle {
    toolVersion checkstyleVersion
    config = resources.text.fromArchiveEntry(configurations.checkstyleConfig, 'google_checks.xml')
    ignoreFailures false
    maxWarnings = 0
}